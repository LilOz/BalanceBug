// Adjust the pin number based on your specific setup
#define LeftSensor A0
#define RightSensor A1
#define Front 9



#define stprPin 2
#define dirrPin 3
#define stplPin 4
#define dirlPin 5
#define ms1 7
#define ms2 8

int corr[2] = {0,0};

void updateCoordinate(int b){
  b = b < 0 ? b + 360 : b;
  Serial.println(String(b));

  b = floor(b / 45.0) * 45.0;
  switch(b){
    case 0:
      corr[1]+=1;
      break;
    case 45:
      corr[0]+=1;
      corr[1]+=1;
      break;
    case 90:
      corr[0]+=1;
      break;
    case 135:
      corr[0]+=1;
      corr[1]+=-1;
      break;
    case 180:
      corr[1]-=1;
      break;
    case 225:
      corr[0]-=1;
      corr[1]-=1;
      break;
    case 270:
      corr[0]-=1;
      break;
    case 315:
      corr[0]-=1;
      corr[1]+=1;
      break;
  }
  Serial.println("X: " + String(corr[0]));
  Serial.println("Y: " + String(corr[1]));
}




void setup() {

  Serial.begin(9600);
  pinMode(LeftSensor, INPUT); 
  pinMode(Front, INPUT); 
  pinMode(RightSensor, INPUT);
  pinMode(stprPin,   OUTPUT);
  pinMode(dirrPin, OUTPUT);
  pinMode(stplPin, OUTPUT);
  pinMode(dirlPin, OUTPUT);
  pinMode(ms1,OUTPUT);
  pinMode(ms2,OUTPUT);
}

void Move(int steps) {
  int direction = (steps > 0) ? 1 : 0;
  digitalWrite(dirrPin, direction);
  digitalWrite(dirlPin, direction);
  steps=abs(steps);
  for (int step = 0; step < steps; step++) {
    digitalWrite(stprPin, HIGH);
    digitalWrite(stplPin, HIGH);
    delay(3);
    digitalWrite(stprPin, LOW);
    digitalWrite(stplPin, LOW);
    delay(1);
  }
}
// right is +ive
void Rotate(int steps) {
  int direction = (steps > 0) ? 1 : 0;
  digitalWrite(dirrPin, direction);
  digitalWrite(dirlPin, !direction);
  steps=abs(steps);
  for (int step = 0; step < steps; step++) {
      digitalWrite(stprPin, HIGH);
      digitalWrite(stplPin, HIGH);
      int f = steps < 100 ? 4: 3;
      delay(f);
      digitalWrite(stprPin, LOW);
      digitalWrite(stplPin, LOW);
      delay(1);
  }}

int Bearing=0; 
int displacement=0;
void loop() {
  digitalWrite(ms1, HIGH);
  digitalWrite(ms2,HIGH);

  int l = analogRead(LeftSensor);
  int r = analogRead(RightSensor);
  int f = digitalRead(Front);
  int t = abs(l-r);

  

  while(t<=100 && f){
    Move(2);
    displacement +=2;
    if(displacement>200){
      updateCoordinate(Bearing);
      displacement=0;
    }
    l = analogRead(LeftSensor);
    r = analogRead(RightSensor);
    t = abs(l-r);
    f = digitalRead(Front);
  }
  

  if(l>r){
    while(t>=100 && f){
      // rotate left
      Rotate(5);
         Bearing+=1;
         Bearing = Bearing >= 360 ? Bearing-360 : Bearing;
      l = analogRead(LeftSensor);
      r = analogRead(RightSensor);
      t = abs(l-r);
      f = digitalRead(Front);

    }
  }
  else if(l<r){
    while(t>=100 && f){
      // rotate right
      Rotate(-5);
      Bearing-=1;
      Bearing = Bearing <= -360 ? Bearing+360 : Bearing;
      l = analogRead(LeftSensor);
      r = analogRead(RightSensor);
      t = abs(l-r);
      f = digitalRead(Front);
    }
  }
  int lower = min(l,r);
  int dirre = lower == l ? -1 : 1;
  while(!f){
    Rotate(5*dirre);
    Bearing+=1;
    Bearing = Bearing >= 360 ? Bearing-360 : Bearing;
    f = digitalRead(Front);
  }
  // Move(200);
  // delay(1000);
  // Move(-200);
  // delay(1000);


  // Serial.println("Left: " + String(l));
  // Serial.println("Front: " + String(f));
  // Serial.println("Right: " + String(r));

}
